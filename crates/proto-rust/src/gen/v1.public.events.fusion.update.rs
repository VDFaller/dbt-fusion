// This file is @generated by prost-build.
/// Self update attempt event.
#[derive(crate::macros::ProtoNew)]
#[cfg_attr(any(test, feature = "test-utils"), derive(::fake::Dummy))]
#[::serde_with::skip_serializing_none]
#[derive(::serde::Serialize, ::serde::Deserialize)]
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct PackageUpdate {
    /// Update dbt to this version (e.g. 1.2.3) \[default: latest version\]
    #[prost(string, tag = "1")]
    pub version: ::prost::alloc::string::String,
    /// Package to update (e.g. dbt) \[default: dbt\]
    #[prost(string, tag = "2")]
    pub package: ::prost::alloc::string::String,
    /// The discovered path to the dbt executable
    #[prost(string, optional, tag = "3")]
    pub exe_path: ::core::option::Option<::prost::alloc::string::String>,
}
impl crate::StaticName for PackageUpdate {
    const FULL_NAME: &'static str = "v1.public.events.fusion.update.PackageUpdate";
    const TYPE_URL: &'static str = "/v1.public.events.fusion.update.PackageUpdate";
}
impl ::prost::Name for PackageUpdate {
    const NAME: &'static str = "PackageUpdate";
    const PACKAGE: &'static str = "v1.public.events.fusion.update";
    fn full_name() -> ::prost::alloc::string::String {
        "v1.public.events.fusion.update.PackageUpdate".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/v1.public.events.fusion.update.PackageUpdate".into()
    }
}
