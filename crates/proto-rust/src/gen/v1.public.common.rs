// This file is @generated by prost-build.
/// the set of valid namespaces in the iceberg catalog.
#[derive(::serde::Serialize)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum VortexIcebergNamespace {
    /// owner: Zach Brown
    Unspecified = 0,
    /// owner: Brandon Cole
    CostMonitoring = 1,
    /// owner: Lukas Schulte
    Fusion = 2,
    /// owner: Zach Brown
    Telemetry = 3,
    /// owner: Zach Brown
    /// This is strictly for dead letter queue events and internal use only.
    Dlq = 4,
    /// owner: Zeeshan Qureshi
    Mantle = 5,
    /// owner: Vadim Rybak
    Codex = 6,
}
impl VortexIcebergNamespace {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unspecified => "VORTEX_ICEBERG_NAMESPACE_UNSPECIFIED",
            Self::CostMonitoring => "VORTEX_ICEBERG_NAMESPACE_COST_MONITORING",
            Self::Fusion => "VORTEX_ICEBERG_NAMESPACE_FUSION",
            Self::Telemetry => "VORTEX_ICEBERG_NAMESPACE_TELEMETRY",
            Self::Dlq => "VORTEX_ICEBERG_NAMESPACE_DLQ",
            Self::Mantle => "VORTEX_ICEBERG_NAMESPACE_MANTLE",
            Self::Codex => "VORTEX_ICEBERG_NAMESPACE_CODEX",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "VORTEX_ICEBERG_NAMESPACE_UNSPECIFIED" => Some(Self::Unspecified),
            "VORTEX_ICEBERG_NAMESPACE_COST_MONITORING" => Some(Self::CostMonitoring),
            "VORTEX_ICEBERG_NAMESPACE_FUSION" => Some(Self::Fusion),
            "VORTEX_ICEBERG_NAMESPACE_TELEMETRY" => Some(Self::Telemetry),
            "VORTEX_ICEBERG_NAMESPACE_DLQ" => Some(Self::Dlq),
            "VORTEX_ICEBERG_NAMESPACE_MANTLE" => Some(Self::Mantle),
            "VORTEX_ICEBERG_NAMESPACE_CODEX" => Some(Self::Codex),
            _ => None,
        }
    }
}
